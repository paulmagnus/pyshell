Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programfile
Rule 1     programfile -> nonempty_block
Rule 2     programfile -> empty
Rule 3     nonempty_block -> statement_complex empty
Rule 4     nonempty_block -> statement_complex nonempty_block
Rule 5     statement_complex -> suite
Rule 6     statement_complex -> statement_multi NL
Rule 7     statement_multi -> shellblock
Rule 8     statement_multi -> python_code
Rule 9     statement_multi -> python_code statement_shell
Rule 10    statement_shell -> shellblock statement_multi
Rule 11    python_code -> PYTHON opt_python
Rule 12    python_code -> STRING opt_python
Rule 13    python_code -> DOCSTRING opt_python
Rule 14    opt_python -> python_code
Rule 15    opt_python -> empty
Rule 16    suite -> INDENT nonempty_block DEDENT
Rule 17    shellblock -> SHELL_DELIMITER statement SHELL_DELIMITER
Rule 18    empty -> <empty>
Rule 19    statement -> proc
Rule 20    statement -> procin
Rule 21    procin -> command STREAM_IN instream procout
Rule 22    procin -> command STREAM_IN instream empty
Rule 23    proc -> command empty
Rule 24    proc -> command procout
Rule 25    command -> WORD arglist
Rule 26    command -> WORD empty
Rule 27    arglist -> arg empty
Rule 28    arglist -> arg arglist
Rule 29    arg -> WORD
Rule 30    arg -> var
Rule 31    arg -> STRING
Rule 32    procout -> pipeout
Rule 33    procout -> streamout
Rule 34    procout -> fileout
Rule 35    pipeout -> PIPE empty proc empty empty empty
Rule 36    pipeout -> PIPE LPAREN proc COMMA proc RPAREN
Rule 37    pipeout -> ERRPIPE empty empty empty proc empty
Rule 38    pipeout -> BOTHPIPE proc
Rule 39    streamout -> STREAM_OUT empty VARNAME empty empty empty
Rule 40    streamout -> STREAM_OUT LPAREN VARNAME COMMA VARNAME RPAREN
Rule 41    streamout -> ERROUT empty empty empty VARNAME empty
Rule 42    streamout -> BOTHOUT VARNAME
Rule 43    fileout -> FILEOUT file
Rule 44    fileout -> FILEAPPEND file
Rule 45    instream -> WORD
Rule 46    instream -> var
Rule 47    instream -> STRING
Rule 48    file -> WORD
Rule 49    file -> var
Rule 50    file -> STRING
Rule 51    var -> VARNAME

Terminals, with rules where they appear

BOTHOUT              : 42
BOTHPIPE             : 38
COMMA                : 36 40
DEDENT               : 16
DOCSTRING            : 13
ERROUT               : 41
ERRPIPE              : 37
FILEAPPEND           : 44
FILEOUT              : 43
INDENT               : 16
LPAREN               : 36 40
NL                   : 6
PIPE                 : 35 36
PYTHON               : 11
RPAREN               : 36 40
SHELL_DELIMITER      : 17 17
STREAM_IN            : 21 22
STREAM_OUT           : 39 40
STRING               : 12 31 47 50
VARNAME              : 39 40 40 41 42 51
WORD                 : 25 26 29 45 48
error                : 

Nonterminals, with rules where they appear

arg                  : 27 28
arglist              : 25 28
command              : 21 22 23 24
empty                : 2 3 15 22 23 26 27 35 35 35 35 37 37 37 37 39 39 39 39 41 41 41 41
file                 : 43 44
fileout              : 34
instream             : 21 22
nonempty_block       : 1 4 16
opt_python           : 11 12 13
pipeout              : 32
proc                 : 19 35 36 36 37 38
procin               : 20
procout              : 21 24
programfile          : 0
python_code          : 8 9 14
shellblock           : 7 10
statement            : 17
statement_complex    : 3 4
statement_multi      : 6 10
statement_shell      : 9
streamout            : 33
suite                : 5
var                  : 30 46 49

Parsing method: LALR

state 0

    (0) S' -> . programfile
    (1) programfile -> . nonempty_block
    (2) programfile -> . empty
    (3) nonempty_block -> . statement_complex empty
    (4) nonempty_block -> . statement_complex nonempty_block
    (18) empty -> .
    (5) statement_complex -> . suite
    (6) statement_complex -> . statement_multi NL
    (16) suite -> . INDENT nonempty_block DEDENT
    (7) statement_multi -> . shellblock
    (8) statement_multi -> . python_code
    (9) statement_multi -> . python_code statement_shell
    (17) shellblock -> . SHELL_DELIMITER statement SHELL_DELIMITER
    (11) python_code -> . PYTHON opt_python
    (12) python_code -> . STRING opt_python
    (13) python_code -> . DOCSTRING opt_python

    $end            reduce using rule 18 (empty -> .)
    INDENT          shift and go to state 3
    SHELL_DELIMITER shift and go to state 2
    PYTHON          shift and go to state 12
    STRING          shift and go to state 8
    DOCSTRING       shift and go to state 9

    suite                          shift and go to state 1
    python_code                    shift and go to state 7
    shellblock                     shift and go to state 10
    nonempty_block                 shift and go to state 4
    statement_multi                shift and go to state 13
    programfile                    shift and go to state 5
    statement_complex              shift and go to state 11
    empty                          shift and go to state 6

state 1

    (5) statement_complex -> suite .

    INDENT          reduce using rule 5 (statement_complex -> suite .)
    SHELL_DELIMITER reduce using rule 5 (statement_complex -> suite .)
    PYTHON          reduce using rule 5 (statement_complex -> suite .)
    STRING          reduce using rule 5 (statement_complex -> suite .)
    DOCSTRING       reduce using rule 5 (statement_complex -> suite .)
    $end            reduce using rule 5 (statement_complex -> suite .)
    DEDENT          reduce using rule 5 (statement_complex -> suite .)


state 2

    (17) shellblock -> SHELL_DELIMITER . statement SHELL_DELIMITER
    (19) statement -> . proc
    (20) statement -> . procin
    (23) proc -> . command empty
    (24) proc -> . command procout
    (21) procin -> . command STREAM_IN instream procout
    (22) procin -> . command STREAM_IN instream empty
    (25) command -> . WORD arglist
    (26) command -> . WORD empty

    WORD            shift and go to state 18

    procin                         shift and go to state 14
    statement                      shift and go to state 15
    proc                           shift and go to state 16
    command                        shift and go to state 17

state 3

    (16) suite -> INDENT . nonempty_block DEDENT
    (3) nonempty_block -> . statement_complex empty
    (4) nonempty_block -> . statement_complex nonempty_block
    (5) statement_complex -> . suite
    (6) statement_complex -> . statement_multi NL
    (16) suite -> . INDENT nonempty_block DEDENT
    (7) statement_multi -> . shellblock
    (8) statement_multi -> . python_code
    (9) statement_multi -> . python_code statement_shell
    (17) shellblock -> . SHELL_DELIMITER statement SHELL_DELIMITER
    (11) python_code -> . PYTHON opt_python
    (12) python_code -> . STRING opt_python
    (13) python_code -> . DOCSTRING opt_python

    INDENT          shift and go to state 3
    SHELL_DELIMITER shift and go to state 2
    PYTHON          shift and go to state 12
    STRING          shift and go to state 8
    DOCSTRING       shift and go to state 9

    suite                          shift and go to state 1
    python_code                    shift and go to state 7
    nonempty_block                 shift and go to state 19
    shellblock                     shift and go to state 10
    statement_complex              shift and go to state 11
    statement_multi                shift and go to state 13

state 4

    (1) programfile -> nonempty_block .

    $end            reduce using rule 1 (programfile -> nonempty_block .)


state 5

    (0) S' -> programfile .



state 6

    (2) programfile -> empty .

    $end            reduce using rule 2 (programfile -> empty .)


state 7

    (8) statement_multi -> python_code .
    (9) statement_multi -> python_code . statement_shell
    (10) statement_shell -> . shellblock statement_multi
    (17) shellblock -> . SHELL_DELIMITER statement SHELL_DELIMITER

    NL              reduce using rule 8 (statement_multi -> python_code .)
    SHELL_DELIMITER shift and go to state 2

    shellblock                     shift and go to state 20
    statement_shell                shift and go to state 21

state 8

    (12) python_code -> STRING . opt_python
    (14) opt_python -> . python_code
    (15) opt_python -> . empty
    (11) python_code -> . PYTHON opt_python
    (12) python_code -> . STRING opt_python
    (13) python_code -> . DOCSTRING opt_python
    (18) empty -> .

    PYTHON          shift and go to state 12
    STRING          shift and go to state 8
    DOCSTRING       shift and go to state 9
    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    NL              reduce using rule 18 (empty -> .)

    opt_python                     shift and go to state 22
    python_code                    shift and go to state 23
    empty                          shift and go to state 24

state 9

    (13) python_code -> DOCSTRING . opt_python
    (14) opt_python -> . python_code
    (15) opt_python -> . empty
    (11) python_code -> . PYTHON opt_python
    (12) python_code -> . STRING opt_python
    (13) python_code -> . DOCSTRING opt_python
    (18) empty -> .

    PYTHON          shift and go to state 12
    STRING          shift and go to state 8
    DOCSTRING       shift and go to state 9
    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    NL              reduce using rule 18 (empty -> .)

    opt_python                     shift and go to state 25
    python_code                    shift and go to state 23
    empty                          shift and go to state 24

state 10

    (7) statement_multi -> shellblock .

    NL              reduce using rule 7 (statement_multi -> shellblock .)


state 11

    (3) nonempty_block -> statement_complex . empty
    (4) nonempty_block -> statement_complex . nonempty_block
    (18) empty -> .
    (3) nonempty_block -> . statement_complex empty
    (4) nonempty_block -> . statement_complex nonempty_block
    (5) statement_complex -> . suite
    (6) statement_complex -> . statement_multi NL
    (16) suite -> . INDENT nonempty_block DEDENT
    (7) statement_multi -> . shellblock
    (8) statement_multi -> . python_code
    (9) statement_multi -> . python_code statement_shell
    (17) shellblock -> . SHELL_DELIMITER statement SHELL_DELIMITER
    (11) python_code -> . PYTHON opt_python
    (12) python_code -> . STRING opt_python
    (13) python_code -> . DOCSTRING opt_python

    $end            reduce using rule 18 (empty -> .)
    DEDENT          reduce using rule 18 (empty -> .)
    INDENT          shift and go to state 3
    SHELL_DELIMITER shift and go to state 2
    PYTHON          shift and go to state 12
    STRING          shift and go to state 8
    DOCSTRING       shift and go to state 9

    suite                          shift and go to state 1
    python_code                    shift and go to state 7
    statement_complex              shift and go to state 11
    empty                          shift and go to state 26
    shellblock                     shift and go to state 10
    nonempty_block                 shift and go to state 27
    statement_multi                shift and go to state 13

state 12

    (11) python_code -> PYTHON . opt_python
    (14) opt_python -> . python_code
    (15) opt_python -> . empty
    (11) python_code -> . PYTHON opt_python
    (12) python_code -> . STRING opt_python
    (13) python_code -> . DOCSTRING opt_python
    (18) empty -> .

    PYTHON          shift and go to state 12
    STRING          shift and go to state 8
    DOCSTRING       shift and go to state 9
    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    NL              reduce using rule 18 (empty -> .)

    opt_python                     shift and go to state 28
    python_code                    shift and go to state 23
    empty                          shift and go to state 24

state 13

    (6) statement_complex -> statement_multi . NL

    NL              shift and go to state 29


state 14

    (20) statement -> procin .

    SHELL_DELIMITER reduce using rule 20 (statement -> procin .)


state 15

    (17) shellblock -> SHELL_DELIMITER statement . SHELL_DELIMITER

    SHELL_DELIMITER shift and go to state 30


state 16

    (19) statement -> proc .

    SHELL_DELIMITER reduce using rule 19 (statement -> proc .)


state 17

    (23) proc -> command . empty
    (24) proc -> command . procout
    (21) procin -> command . STREAM_IN instream procout
    (22) procin -> command . STREAM_IN instream empty
    (18) empty -> .
    (32) procout -> . pipeout
    (33) procout -> . streamout
    (34) procout -> . fileout
    (35) pipeout -> . PIPE empty proc empty empty empty
    (36) pipeout -> . PIPE LPAREN proc COMMA proc RPAREN
    (37) pipeout -> . ERRPIPE empty empty empty proc empty
    (38) pipeout -> . BOTHPIPE proc
    (39) streamout -> . STREAM_OUT empty VARNAME empty empty empty
    (40) streamout -> . STREAM_OUT LPAREN VARNAME COMMA VARNAME RPAREN
    (41) streamout -> . ERROUT empty empty empty VARNAME empty
    (42) streamout -> . BOTHOUT VARNAME
    (43) fileout -> . FILEOUT file
    (44) fileout -> . FILEAPPEND file

    STREAM_IN       shift and go to state 37
    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    PIPE            shift and go to state 35
    ERRPIPE         shift and go to state 36
    BOTHPIPE        shift and go to state 34
    STREAM_OUT      shift and go to state 40
    ERROUT          shift and go to state 33
    BOTHOUT         shift and go to state 42
    FILEOUT         shift and go to state 43
    FILEAPPEND      shift and go to state 44

    pipeout                        shift and go to state 31
    fileout                        shift and go to state 38
    procout                        shift and go to state 32
    streamout                      shift and go to state 39
    empty                          shift and go to state 41

state 18

    (25) command -> WORD . arglist
    (26) command -> WORD . empty
    (27) arglist -> . arg empty
    (28) arglist -> . arg arglist
    (18) empty -> .
    (29) arg -> . WORD
    (30) arg -> . var
    (31) arg -> . STRING
    (51) var -> . VARNAME

    STREAM_IN       reduce using rule 18 (empty -> .)
    PIPE            reduce using rule 18 (empty -> .)
    ERRPIPE         reduce using rule 18 (empty -> .)
    BOTHPIPE        reduce using rule 18 (empty -> .)
    STREAM_OUT      reduce using rule 18 (empty -> .)
    ERROUT          reduce using rule 18 (empty -> .)
    BOTHOUT         reduce using rule 18 (empty -> .)
    FILEOUT         reduce using rule 18 (empty -> .)
    FILEAPPEND      reduce using rule 18 (empty -> .)
    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    COMMA           reduce using rule 18 (empty -> .)
    RPAREN          reduce using rule 18 (empty -> .)
    WORD            shift and go to state 46
    STRING          shift and go to state 50
    VARNAME         shift and go to state 47

    arg                            shift and go to state 45
    arglist                        shift and go to state 48
    var                            shift and go to state 49
    empty                          shift and go to state 51

state 19

    (16) suite -> INDENT nonempty_block . DEDENT

    DEDENT          shift and go to state 52


state 20

    (10) statement_shell -> shellblock . statement_multi
    (7) statement_multi -> . shellblock
    (8) statement_multi -> . python_code
    (9) statement_multi -> . python_code statement_shell
    (17) shellblock -> . SHELL_DELIMITER statement SHELL_DELIMITER
    (11) python_code -> . PYTHON opt_python
    (12) python_code -> . STRING opt_python
    (13) python_code -> . DOCSTRING opt_python

    SHELL_DELIMITER shift and go to state 2
    PYTHON          shift and go to state 12
    STRING          shift and go to state 8
    DOCSTRING       shift and go to state 9

    python_code                    shift and go to state 7
    shellblock                     shift and go to state 10
    statement_multi                shift and go to state 53

state 21

    (9) statement_multi -> python_code statement_shell .

    NL              reduce using rule 9 (statement_multi -> python_code statement_shell .)


state 22

    (12) python_code -> STRING opt_python .

    SHELL_DELIMITER reduce using rule 12 (python_code -> STRING opt_python .)
    NL              reduce using rule 12 (python_code -> STRING opt_python .)


state 23

    (14) opt_python -> python_code .

    SHELL_DELIMITER reduce using rule 14 (opt_python -> python_code .)
    NL              reduce using rule 14 (opt_python -> python_code .)


state 24

    (15) opt_python -> empty .

    SHELL_DELIMITER reduce using rule 15 (opt_python -> empty .)
    NL              reduce using rule 15 (opt_python -> empty .)


state 25

    (13) python_code -> DOCSTRING opt_python .

    SHELL_DELIMITER reduce using rule 13 (python_code -> DOCSTRING opt_python .)
    NL              reduce using rule 13 (python_code -> DOCSTRING opt_python .)


state 26

    (3) nonempty_block -> statement_complex empty .

    $end            reduce using rule 3 (nonempty_block -> statement_complex empty .)
    DEDENT          reduce using rule 3 (nonempty_block -> statement_complex empty .)


state 27

    (4) nonempty_block -> statement_complex nonempty_block .

    $end            reduce using rule 4 (nonempty_block -> statement_complex nonempty_block .)
    DEDENT          reduce using rule 4 (nonempty_block -> statement_complex nonempty_block .)


state 28

    (11) python_code -> PYTHON opt_python .

    SHELL_DELIMITER reduce using rule 11 (python_code -> PYTHON opt_python .)
    NL              reduce using rule 11 (python_code -> PYTHON opt_python .)


state 29

    (6) statement_complex -> statement_multi NL .

    INDENT          reduce using rule 6 (statement_complex -> statement_multi NL .)
    SHELL_DELIMITER reduce using rule 6 (statement_complex -> statement_multi NL .)
    PYTHON          reduce using rule 6 (statement_complex -> statement_multi NL .)
    STRING          reduce using rule 6 (statement_complex -> statement_multi NL .)
    DOCSTRING       reduce using rule 6 (statement_complex -> statement_multi NL .)
    $end            reduce using rule 6 (statement_complex -> statement_multi NL .)
    DEDENT          reduce using rule 6 (statement_complex -> statement_multi NL .)


state 30

    (17) shellblock -> SHELL_DELIMITER statement SHELL_DELIMITER .

    NL              reduce using rule 17 (shellblock -> SHELL_DELIMITER statement SHELL_DELIMITER .)
    SHELL_DELIMITER reduce using rule 17 (shellblock -> SHELL_DELIMITER statement SHELL_DELIMITER .)
    PYTHON          reduce using rule 17 (shellblock -> SHELL_DELIMITER statement SHELL_DELIMITER .)
    STRING          reduce using rule 17 (shellblock -> SHELL_DELIMITER statement SHELL_DELIMITER .)
    DOCSTRING       reduce using rule 17 (shellblock -> SHELL_DELIMITER statement SHELL_DELIMITER .)


state 31

    (32) procout -> pipeout .

    SHELL_DELIMITER reduce using rule 32 (procout -> pipeout .)
    COMMA           reduce using rule 32 (procout -> pipeout .)
    RPAREN          reduce using rule 32 (procout -> pipeout .)


state 32

    (24) proc -> command procout .

    SHELL_DELIMITER reduce using rule 24 (proc -> command procout .)
    COMMA           reduce using rule 24 (proc -> command procout .)
    RPAREN          reduce using rule 24 (proc -> command procout .)


state 33

    (41) streamout -> ERROUT . empty empty empty VARNAME empty
    (18) empty -> .

    VARNAME         reduce using rule 18 (empty -> .)

    empty                          shift and go to state 54

state 34

    (38) pipeout -> BOTHPIPE . proc
    (23) proc -> . command empty
    (24) proc -> . command procout
    (25) command -> . WORD arglist
    (26) command -> . WORD empty

    WORD            shift and go to state 18

    proc                           shift and go to state 55
    command                        shift and go to state 56

state 35

    (35) pipeout -> PIPE . empty proc empty empty empty
    (36) pipeout -> PIPE . LPAREN proc COMMA proc RPAREN
    (18) empty -> .

    LPAREN          shift and go to state 57
    WORD            reduce using rule 18 (empty -> .)

    empty                          shift and go to state 58

state 36

    (37) pipeout -> ERRPIPE . empty empty empty proc empty
    (18) empty -> .

    WORD            reduce using rule 18 (empty -> .)

    empty                          shift and go to state 59

state 37

    (21) procin -> command STREAM_IN . instream procout
    (22) procin -> command STREAM_IN . instream empty
    (45) instream -> . WORD
    (46) instream -> . var
    (47) instream -> . STRING
    (51) var -> . VARNAME

    WORD            shift and go to state 60
    STRING          shift and go to state 63
    VARNAME         shift and go to state 47

    var                            shift and go to state 62
    instream                       shift and go to state 61

state 38

    (34) procout -> fileout .

    SHELL_DELIMITER reduce using rule 34 (procout -> fileout .)
    COMMA           reduce using rule 34 (procout -> fileout .)
    RPAREN          reduce using rule 34 (procout -> fileout .)


state 39

    (33) procout -> streamout .

    SHELL_DELIMITER reduce using rule 33 (procout -> streamout .)
    COMMA           reduce using rule 33 (procout -> streamout .)
    RPAREN          reduce using rule 33 (procout -> streamout .)


state 40

    (39) streamout -> STREAM_OUT . empty VARNAME empty empty empty
    (40) streamout -> STREAM_OUT . LPAREN VARNAME COMMA VARNAME RPAREN
    (18) empty -> .

    LPAREN          shift and go to state 64
    VARNAME         reduce using rule 18 (empty -> .)

    empty                          shift and go to state 65

state 41

    (23) proc -> command empty .

    SHELL_DELIMITER reduce using rule 23 (proc -> command empty .)
    COMMA           reduce using rule 23 (proc -> command empty .)
    RPAREN          reduce using rule 23 (proc -> command empty .)


state 42

    (42) streamout -> BOTHOUT . VARNAME

    VARNAME         shift and go to state 66


state 43

    (43) fileout -> FILEOUT . file
    (48) file -> . WORD
    (49) file -> . var
    (50) file -> . STRING
    (51) var -> . VARNAME

    WORD            shift and go to state 68
    STRING          shift and go to state 70
    VARNAME         shift and go to state 47

    file                           shift and go to state 67
    var                            shift and go to state 69

state 44

    (44) fileout -> FILEAPPEND . file
    (48) file -> . WORD
    (49) file -> . var
    (50) file -> . STRING
    (51) var -> . VARNAME

    WORD            shift and go to state 68
    STRING          shift and go to state 70
    VARNAME         shift and go to state 47

    file                           shift and go to state 71
    var                            shift and go to state 69

state 45

    (27) arglist -> arg . empty
    (28) arglist -> arg . arglist
    (18) empty -> .
    (27) arglist -> . arg empty
    (28) arglist -> . arg arglist
    (29) arg -> . WORD
    (30) arg -> . var
    (31) arg -> . STRING
    (51) var -> . VARNAME

    STREAM_IN       reduce using rule 18 (empty -> .)
    PIPE            reduce using rule 18 (empty -> .)
    ERRPIPE         reduce using rule 18 (empty -> .)
    BOTHPIPE        reduce using rule 18 (empty -> .)
    STREAM_OUT      reduce using rule 18 (empty -> .)
    ERROUT          reduce using rule 18 (empty -> .)
    BOTHOUT         reduce using rule 18 (empty -> .)
    FILEOUT         reduce using rule 18 (empty -> .)
    FILEAPPEND      reduce using rule 18 (empty -> .)
    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    COMMA           reduce using rule 18 (empty -> .)
    RPAREN          reduce using rule 18 (empty -> .)
    WORD            shift and go to state 46
    STRING          shift and go to state 50
    VARNAME         shift and go to state 47

    arg                            shift and go to state 45
    var                            shift and go to state 49
    arglist                        shift and go to state 72
    empty                          shift and go to state 73

state 46

    (29) arg -> WORD .

    WORD            reduce using rule 29 (arg -> WORD .)
    STRING          reduce using rule 29 (arg -> WORD .)
    VARNAME         reduce using rule 29 (arg -> WORD .)
    STREAM_IN       reduce using rule 29 (arg -> WORD .)
    PIPE            reduce using rule 29 (arg -> WORD .)
    ERRPIPE         reduce using rule 29 (arg -> WORD .)
    BOTHPIPE        reduce using rule 29 (arg -> WORD .)
    STREAM_OUT      reduce using rule 29 (arg -> WORD .)
    ERROUT          reduce using rule 29 (arg -> WORD .)
    BOTHOUT         reduce using rule 29 (arg -> WORD .)
    FILEOUT         reduce using rule 29 (arg -> WORD .)
    FILEAPPEND      reduce using rule 29 (arg -> WORD .)
    SHELL_DELIMITER reduce using rule 29 (arg -> WORD .)
    COMMA           reduce using rule 29 (arg -> WORD .)
    RPAREN          reduce using rule 29 (arg -> WORD .)


state 47

    (51) var -> VARNAME .

    PIPE            reduce using rule 51 (var -> VARNAME .)
    ERRPIPE         reduce using rule 51 (var -> VARNAME .)
    BOTHPIPE        reduce using rule 51 (var -> VARNAME .)
    STREAM_OUT      reduce using rule 51 (var -> VARNAME .)
    ERROUT          reduce using rule 51 (var -> VARNAME .)
    BOTHOUT         reduce using rule 51 (var -> VARNAME .)
    FILEOUT         reduce using rule 51 (var -> VARNAME .)
    FILEAPPEND      reduce using rule 51 (var -> VARNAME .)
    SHELL_DELIMITER reduce using rule 51 (var -> VARNAME .)
    WORD            reduce using rule 51 (var -> VARNAME .)
    STRING          reduce using rule 51 (var -> VARNAME .)
    VARNAME         reduce using rule 51 (var -> VARNAME .)
    STREAM_IN       reduce using rule 51 (var -> VARNAME .)
    COMMA           reduce using rule 51 (var -> VARNAME .)
    RPAREN          reduce using rule 51 (var -> VARNAME .)


state 48

    (25) command -> WORD arglist .

    PIPE            reduce using rule 25 (command -> WORD arglist .)
    ERRPIPE         reduce using rule 25 (command -> WORD arglist .)
    BOTHPIPE        reduce using rule 25 (command -> WORD arglist .)
    STREAM_OUT      reduce using rule 25 (command -> WORD arglist .)
    ERROUT          reduce using rule 25 (command -> WORD arglist .)
    BOTHOUT         reduce using rule 25 (command -> WORD arglist .)
    FILEOUT         reduce using rule 25 (command -> WORD arglist .)
    FILEAPPEND      reduce using rule 25 (command -> WORD arglist .)
    RPAREN          reduce using rule 25 (command -> WORD arglist .)
    SHELL_DELIMITER reduce using rule 25 (command -> WORD arglist .)
    COMMA           reduce using rule 25 (command -> WORD arglist .)
    STREAM_IN       reduce using rule 25 (command -> WORD arglist .)


state 49

    (30) arg -> var .

    WORD            reduce using rule 30 (arg -> var .)
    STRING          reduce using rule 30 (arg -> var .)
    VARNAME         reduce using rule 30 (arg -> var .)
    STREAM_IN       reduce using rule 30 (arg -> var .)
    PIPE            reduce using rule 30 (arg -> var .)
    ERRPIPE         reduce using rule 30 (arg -> var .)
    BOTHPIPE        reduce using rule 30 (arg -> var .)
    STREAM_OUT      reduce using rule 30 (arg -> var .)
    ERROUT          reduce using rule 30 (arg -> var .)
    BOTHOUT         reduce using rule 30 (arg -> var .)
    FILEOUT         reduce using rule 30 (arg -> var .)
    FILEAPPEND      reduce using rule 30 (arg -> var .)
    SHELL_DELIMITER reduce using rule 30 (arg -> var .)
    COMMA           reduce using rule 30 (arg -> var .)
    RPAREN          reduce using rule 30 (arg -> var .)


state 50

    (31) arg -> STRING .

    WORD            reduce using rule 31 (arg -> STRING .)
    STRING          reduce using rule 31 (arg -> STRING .)
    VARNAME         reduce using rule 31 (arg -> STRING .)
    STREAM_IN       reduce using rule 31 (arg -> STRING .)
    PIPE            reduce using rule 31 (arg -> STRING .)
    ERRPIPE         reduce using rule 31 (arg -> STRING .)
    BOTHPIPE        reduce using rule 31 (arg -> STRING .)
    STREAM_OUT      reduce using rule 31 (arg -> STRING .)
    ERROUT          reduce using rule 31 (arg -> STRING .)
    BOTHOUT         reduce using rule 31 (arg -> STRING .)
    FILEOUT         reduce using rule 31 (arg -> STRING .)
    FILEAPPEND      reduce using rule 31 (arg -> STRING .)
    SHELL_DELIMITER reduce using rule 31 (arg -> STRING .)
    COMMA           reduce using rule 31 (arg -> STRING .)
    RPAREN          reduce using rule 31 (arg -> STRING .)


state 51

    (26) command -> WORD empty .

    PIPE            reduce using rule 26 (command -> WORD empty .)
    ERRPIPE         reduce using rule 26 (command -> WORD empty .)
    BOTHPIPE        reduce using rule 26 (command -> WORD empty .)
    STREAM_OUT      reduce using rule 26 (command -> WORD empty .)
    ERROUT          reduce using rule 26 (command -> WORD empty .)
    BOTHOUT         reduce using rule 26 (command -> WORD empty .)
    FILEOUT         reduce using rule 26 (command -> WORD empty .)
    FILEAPPEND      reduce using rule 26 (command -> WORD empty .)
    RPAREN          reduce using rule 26 (command -> WORD empty .)
    SHELL_DELIMITER reduce using rule 26 (command -> WORD empty .)
    COMMA           reduce using rule 26 (command -> WORD empty .)
    STREAM_IN       reduce using rule 26 (command -> WORD empty .)


state 52

    (16) suite -> INDENT nonempty_block DEDENT .

    INDENT          reduce using rule 16 (suite -> INDENT nonempty_block DEDENT .)
    SHELL_DELIMITER reduce using rule 16 (suite -> INDENT nonempty_block DEDENT .)
    PYTHON          reduce using rule 16 (suite -> INDENT nonempty_block DEDENT .)
    STRING          reduce using rule 16 (suite -> INDENT nonempty_block DEDENT .)
    DOCSTRING       reduce using rule 16 (suite -> INDENT nonempty_block DEDENT .)
    $end            reduce using rule 16 (suite -> INDENT nonempty_block DEDENT .)
    DEDENT          reduce using rule 16 (suite -> INDENT nonempty_block DEDENT .)


state 53

    (10) statement_shell -> shellblock statement_multi .

    NL              reduce using rule 10 (statement_shell -> shellblock statement_multi .)


state 54

    (41) streamout -> ERROUT empty . empty empty VARNAME empty
    (18) empty -> .

    VARNAME         reduce using rule 18 (empty -> .)

    empty                          shift and go to state 74

state 55

    (38) pipeout -> BOTHPIPE proc .

    SHELL_DELIMITER reduce using rule 38 (pipeout -> BOTHPIPE proc .)
    COMMA           reduce using rule 38 (pipeout -> BOTHPIPE proc .)
    RPAREN          reduce using rule 38 (pipeout -> BOTHPIPE proc .)


state 56

    (23) proc -> command . empty
    (24) proc -> command . procout
    (18) empty -> .
    (32) procout -> . pipeout
    (33) procout -> . streamout
    (34) procout -> . fileout
    (35) pipeout -> . PIPE empty proc empty empty empty
    (36) pipeout -> . PIPE LPAREN proc COMMA proc RPAREN
    (37) pipeout -> . ERRPIPE empty empty empty proc empty
    (38) pipeout -> . BOTHPIPE proc
    (39) streamout -> . STREAM_OUT empty VARNAME empty empty empty
    (40) streamout -> . STREAM_OUT LPAREN VARNAME COMMA VARNAME RPAREN
    (41) streamout -> . ERROUT empty empty empty VARNAME empty
    (42) streamout -> . BOTHOUT VARNAME
    (43) fileout -> . FILEOUT file
    (44) fileout -> . FILEAPPEND file

    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    COMMA           reduce using rule 18 (empty -> .)
    RPAREN          reduce using rule 18 (empty -> .)
    PIPE            shift and go to state 35
    ERRPIPE         shift and go to state 36
    BOTHPIPE        shift and go to state 34
    STREAM_OUT      shift and go to state 40
    ERROUT          shift and go to state 33
    BOTHOUT         shift and go to state 42
    FILEOUT         shift and go to state 43
    FILEAPPEND      shift and go to state 44

    pipeout                        shift and go to state 31
    fileout                        shift and go to state 38
    procout                        shift and go to state 32
    streamout                      shift and go to state 39
    empty                          shift and go to state 41

state 57

    (36) pipeout -> PIPE LPAREN . proc COMMA proc RPAREN
    (23) proc -> . command empty
    (24) proc -> . command procout
    (25) command -> . WORD arglist
    (26) command -> . WORD empty

    WORD            shift and go to state 18

    proc                           shift and go to state 75
    command                        shift and go to state 56

state 58

    (35) pipeout -> PIPE empty . proc empty empty empty
    (23) proc -> . command empty
    (24) proc -> . command procout
    (25) command -> . WORD arglist
    (26) command -> . WORD empty

    WORD            shift and go to state 18

    proc                           shift and go to state 76
    command                        shift and go to state 56

state 59

    (37) pipeout -> ERRPIPE empty . empty empty proc empty
    (18) empty -> .

    WORD            reduce using rule 18 (empty -> .)

    empty                          shift and go to state 77

state 60

    (45) instream -> WORD .

    PIPE            reduce using rule 45 (instream -> WORD .)
    ERRPIPE         reduce using rule 45 (instream -> WORD .)
    BOTHPIPE        reduce using rule 45 (instream -> WORD .)
    STREAM_OUT      reduce using rule 45 (instream -> WORD .)
    ERROUT          reduce using rule 45 (instream -> WORD .)
    BOTHOUT         reduce using rule 45 (instream -> WORD .)
    FILEOUT         reduce using rule 45 (instream -> WORD .)
    FILEAPPEND      reduce using rule 45 (instream -> WORD .)
    SHELL_DELIMITER reduce using rule 45 (instream -> WORD .)


state 61

    (21) procin -> command STREAM_IN instream . procout
    (22) procin -> command STREAM_IN instream . empty
    (32) procout -> . pipeout
    (33) procout -> . streamout
    (34) procout -> . fileout
    (18) empty -> .
    (35) pipeout -> . PIPE empty proc empty empty empty
    (36) pipeout -> . PIPE LPAREN proc COMMA proc RPAREN
    (37) pipeout -> . ERRPIPE empty empty empty proc empty
    (38) pipeout -> . BOTHPIPE proc
    (39) streamout -> . STREAM_OUT empty VARNAME empty empty empty
    (40) streamout -> . STREAM_OUT LPAREN VARNAME COMMA VARNAME RPAREN
    (41) streamout -> . ERROUT empty empty empty VARNAME empty
    (42) streamout -> . BOTHOUT VARNAME
    (43) fileout -> . FILEOUT file
    (44) fileout -> . FILEAPPEND file

    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    PIPE            shift and go to state 35
    ERRPIPE         shift and go to state 36
    BOTHPIPE        shift and go to state 34
    STREAM_OUT      shift and go to state 40
    ERROUT          shift and go to state 33
    BOTHOUT         shift and go to state 42
    FILEOUT         shift and go to state 43
    FILEAPPEND      shift and go to state 44

    pipeout                        shift and go to state 31
    fileout                        shift and go to state 38
    procout                        shift and go to state 78
    streamout                      shift and go to state 39
    empty                          shift and go to state 79

state 62

    (46) instream -> var .

    PIPE            reduce using rule 46 (instream -> var .)
    ERRPIPE         reduce using rule 46 (instream -> var .)
    BOTHPIPE        reduce using rule 46 (instream -> var .)
    STREAM_OUT      reduce using rule 46 (instream -> var .)
    ERROUT          reduce using rule 46 (instream -> var .)
    BOTHOUT         reduce using rule 46 (instream -> var .)
    FILEOUT         reduce using rule 46 (instream -> var .)
    FILEAPPEND      reduce using rule 46 (instream -> var .)
    SHELL_DELIMITER reduce using rule 46 (instream -> var .)


state 63

    (47) instream -> STRING .

    PIPE            reduce using rule 47 (instream -> STRING .)
    ERRPIPE         reduce using rule 47 (instream -> STRING .)
    BOTHPIPE        reduce using rule 47 (instream -> STRING .)
    STREAM_OUT      reduce using rule 47 (instream -> STRING .)
    ERROUT          reduce using rule 47 (instream -> STRING .)
    BOTHOUT         reduce using rule 47 (instream -> STRING .)
    FILEOUT         reduce using rule 47 (instream -> STRING .)
    FILEAPPEND      reduce using rule 47 (instream -> STRING .)
    SHELL_DELIMITER reduce using rule 47 (instream -> STRING .)


state 64

    (40) streamout -> STREAM_OUT LPAREN . VARNAME COMMA VARNAME RPAREN

    VARNAME         shift and go to state 80


state 65

    (39) streamout -> STREAM_OUT empty . VARNAME empty empty empty

    VARNAME         shift and go to state 81


state 66

    (42) streamout -> BOTHOUT VARNAME .

    SHELL_DELIMITER reduce using rule 42 (streamout -> BOTHOUT VARNAME .)
    COMMA           reduce using rule 42 (streamout -> BOTHOUT VARNAME .)
    RPAREN          reduce using rule 42 (streamout -> BOTHOUT VARNAME .)


state 67

    (43) fileout -> FILEOUT file .

    SHELL_DELIMITER reduce using rule 43 (fileout -> FILEOUT file .)
    COMMA           reduce using rule 43 (fileout -> FILEOUT file .)
    RPAREN          reduce using rule 43 (fileout -> FILEOUT file .)


state 68

    (48) file -> WORD .

    SHELL_DELIMITER reduce using rule 48 (file -> WORD .)
    COMMA           reduce using rule 48 (file -> WORD .)
    RPAREN          reduce using rule 48 (file -> WORD .)


state 69

    (49) file -> var .

    SHELL_DELIMITER reduce using rule 49 (file -> var .)
    COMMA           reduce using rule 49 (file -> var .)
    RPAREN          reduce using rule 49 (file -> var .)


state 70

    (50) file -> STRING .

    SHELL_DELIMITER reduce using rule 50 (file -> STRING .)
    COMMA           reduce using rule 50 (file -> STRING .)
    RPAREN          reduce using rule 50 (file -> STRING .)


state 71

    (44) fileout -> FILEAPPEND file .

    SHELL_DELIMITER reduce using rule 44 (fileout -> FILEAPPEND file .)
    COMMA           reduce using rule 44 (fileout -> FILEAPPEND file .)
    RPAREN          reduce using rule 44 (fileout -> FILEAPPEND file .)


state 72

    (28) arglist -> arg arglist .

    STREAM_IN       reduce using rule 28 (arglist -> arg arglist .)
    PIPE            reduce using rule 28 (arglist -> arg arglist .)
    ERRPIPE         reduce using rule 28 (arglist -> arg arglist .)
    BOTHPIPE        reduce using rule 28 (arglist -> arg arglist .)
    STREAM_OUT      reduce using rule 28 (arglist -> arg arglist .)
    ERROUT          reduce using rule 28 (arglist -> arg arglist .)
    BOTHOUT         reduce using rule 28 (arglist -> arg arglist .)
    FILEOUT         reduce using rule 28 (arglist -> arg arglist .)
    FILEAPPEND      reduce using rule 28 (arglist -> arg arglist .)
    SHELL_DELIMITER reduce using rule 28 (arglist -> arg arglist .)
    COMMA           reduce using rule 28 (arglist -> arg arglist .)
    RPAREN          reduce using rule 28 (arglist -> arg arglist .)


state 73

    (27) arglist -> arg empty .

    STREAM_IN       reduce using rule 27 (arglist -> arg empty .)
    PIPE            reduce using rule 27 (arglist -> arg empty .)
    ERRPIPE         reduce using rule 27 (arglist -> arg empty .)
    BOTHPIPE        reduce using rule 27 (arglist -> arg empty .)
    STREAM_OUT      reduce using rule 27 (arglist -> arg empty .)
    ERROUT          reduce using rule 27 (arglist -> arg empty .)
    BOTHOUT         reduce using rule 27 (arglist -> arg empty .)
    FILEOUT         reduce using rule 27 (arglist -> arg empty .)
    FILEAPPEND      reduce using rule 27 (arglist -> arg empty .)
    SHELL_DELIMITER reduce using rule 27 (arglist -> arg empty .)
    COMMA           reduce using rule 27 (arglist -> arg empty .)
    RPAREN          reduce using rule 27 (arglist -> arg empty .)


state 74

    (41) streamout -> ERROUT empty empty . empty VARNAME empty
    (18) empty -> .

    VARNAME         reduce using rule 18 (empty -> .)

    empty                          shift and go to state 82

state 75

    (36) pipeout -> PIPE LPAREN proc . COMMA proc RPAREN

    COMMA           shift and go to state 83


state 76

    (35) pipeout -> PIPE empty proc . empty empty empty
    (18) empty -> .

    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    COMMA           reduce using rule 18 (empty -> .)
    RPAREN          reduce using rule 18 (empty -> .)

    empty                          shift and go to state 84

state 77

    (37) pipeout -> ERRPIPE empty empty . empty proc empty
    (18) empty -> .

    WORD            reduce using rule 18 (empty -> .)

    empty                          shift and go to state 85

state 78

    (21) procin -> command STREAM_IN instream procout .

    SHELL_DELIMITER reduce using rule 21 (procin -> command STREAM_IN instream procout .)


state 79

    (22) procin -> command STREAM_IN instream empty .

    SHELL_DELIMITER reduce using rule 22 (procin -> command STREAM_IN instream empty .)


state 80

    (40) streamout -> STREAM_OUT LPAREN VARNAME . COMMA VARNAME RPAREN

    COMMA           shift and go to state 86


state 81

    (39) streamout -> STREAM_OUT empty VARNAME . empty empty empty
    (18) empty -> .

    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    COMMA           reduce using rule 18 (empty -> .)
    RPAREN          reduce using rule 18 (empty -> .)

    empty                          shift and go to state 87

state 82

    (41) streamout -> ERROUT empty empty empty . VARNAME empty

    VARNAME         shift and go to state 88


state 83

    (36) pipeout -> PIPE LPAREN proc COMMA . proc RPAREN
    (23) proc -> . command empty
    (24) proc -> . command procout
    (25) command -> . WORD arglist
    (26) command -> . WORD empty

    WORD            shift and go to state 18

    proc                           shift and go to state 89
    command                        shift and go to state 56

state 84

    (35) pipeout -> PIPE empty proc empty . empty empty
    (18) empty -> .

    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    COMMA           reduce using rule 18 (empty -> .)
    RPAREN          reduce using rule 18 (empty -> .)

    empty                          shift and go to state 90

state 85

    (37) pipeout -> ERRPIPE empty empty empty . proc empty
    (23) proc -> . command empty
    (24) proc -> . command procout
    (25) command -> . WORD arglist
    (26) command -> . WORD empty

    WORD            shift and go to state 18

    proc                           shift and go to state 91
    command                        shift and go to state 56

state 86

    (40) streamout -> STREAM_OUT LPAREN VARNAME COMMA . VARNAME RPAREN

    VARNAME         shift and go to state 92


state 87

    (39) streamout -> STREAM_OUT empty VARNAME empty . empty empty
    (18) empty -> .

    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    COMMA           reduce using rule 18 (empty -> .)
    RPAREN          reduce using rule 18 (empty -> .)

    empty                          shift and go to state 93

state 88

    (41) streamout -> ERROUT empty empty empty VARNAME . empty
    (18) empty -> .

    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    COMMA           reduce using rule 18 (empty -> .)
    RPAREN          reduce using rule 18 (empty -> .)

    empty                          shift and go to state 94

state 89

    (36) pipeout -> PIPE LPAREN proc COMMA proc . RPAREN

    RPAREN          shift and go to state 95


state 90

    (35) pipeout -> PIPE empty proc empty empty . empty
    (18) empty -> .

    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    COMMA           reduce using rule 18 (empty -> .)
    RPAREN          reduce using rule 18 (empty -> .)

    empty                          shift and go to state 96

state 91

    (37) pipeout -> ERRPIPE empty empty empty proc . empty
    (18) empty -> .

    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    COMMA           reduce using rule 18 (empty -> .)
    RPAREN          reduce using rule 18 (empty -> .)

    empty                          shift and go to state 97

state 92

    (40) streamout -> STREAM_OUT LPAREN VARNAME COMMA VARNAME . RPAREN

    RPAREN          shift and go to state 98


state 93

    (39) streamout -> STREAM_OUT empty VARNAME empty empty . empty
    (18) empty -> .

    SHELL_DELIMITER reduce using rule 18 (empty -> .)
    COMMA           reduce using rule 18 (empty -> .)
    RPAREN          reduce using rule 18 (empty -> .)

    empty                          shift and go to state 99

state 94

    (41) streamout -> ERROUT empty empty empty VARNAME empty .

    SHELL_DELIMITER reduce using rule 41 (streamout -> ERROUT empty empty empty VARNAME empty .)
    COMMA           reduce using rule 41 (streamout -> ERROUT empty empty empty VARNAME empty .)
    RPAREN          reduce using rule 41 (streamout -> ERROUT empty empty empty VARNAME empty .)


state 95

    (36) pipeout -> PIPE LPAREN proc COMMA proc RPAREN .

    SHELL_DELIMITER reduce using rule 36 (pipeout -> PIPE LPAREN proc COMMA proc RPAREN .)
    COMMA           reduce using rule 36 (pipeout -> PIPE LPAREN proc COMMA proc RPAREN .)
    RPAREN          reduce using rule 36 (pipeout -> PIPE LPAREN proc COMMA proc RPAREN .)


state 96

    (35) pipeout -> PIPE empty proc empty empty empty .

    SHELL_DELIMITER reduce using rule 35 (pipeout -> PIPE empty proc empty empty empty .)
    COMMA           reduce using rule 35 (pipeout -> PIPE empty proc empty empty empty .)
    RPAREN          reduce using rule 35 (pipeout -> PIPE empty proc empty empty empty .)


state 97

    (37) pipeout -> ERRPIPE empty empty empty proc empty .

    SHELL_DELIMITER reduce using rule 37 (pipeout -> ERRPIPE empty empty empty proc empty .)
    COMMA           reduce using rule 37 (pipeout -> ERRPIPE empty empty empty proc empty .)
    RPAREN          reduce using rule 37 (pipeout -> ERRPIPE empty empty empty proc empty .)


state 98

    (40) streamout -> STREAM_OUT LPAREN VARNAME COMMA VARNAME RPAREN .

    SHELL_DELIMITER reduce using rule 40 (streamout -> STREAM_OUT LPAREN VARNAME COMMA VARNAME RPAREN .)
    COMMA           reduce using rule 40 (streamout -> STREAM_OUT LPAREN VARNAME COMMA VARNAME RPAREN .)
    RPAREN          reduce using rule 40 (streamout -> STREAM_OUT LPAREN VARNAME COMMA VARNAME RPAREN .)


state 99

    (39) streamout -> STREAM_OUT empty VARNAME empty empty empty .

    SHELL_DELIMITER reduce using rule 39 (streamout -> STREAM_OUT empty VARNAME empty empty empty .)
    COMMA           reduce using rule 39 (streamout -> STREAM_OUT empty VARNAME empty empty empty .)
    RPAREN          reduce using rule 39 (streamout -> STREAM_OUT empty VARNAME empty empty empty .)



# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programfilenonassocEPSILONASSERT ASSIGNMENT_OPERATOR BOTHOUT BOTHPIPE COLON COMMA DEDENT DOCSTRING ELIF ELSE ERROUT ERRPIPE FILEAPPEND FILEOUT FOR IF IN INDENT LPAREN NL PIPE PYTHON RETURN RPAREN SEMICOLON SHELL_DELIMITER STREAM_IN STREAM_OUT STRING VARNAME WHILE WORD YIELDprogramfile : nonempty_block\n                   | emptynonempty_block : statement_complex empty\n                      | statement_complex nonempty_blockstatement_complex : loop\n                         | conditional\n                         | statement_multi NL\n                         | statement_multi SEMICOLON NLstatement_multi : statement_multi SEMICOLON statement_multistatement_multi : statement_simplestatement_simple : statement_result\n                        | statement_no_resultstatement_result : assignment\n                        | return\n                        | assert\n                        | yieldstatement_no_result : shellblock\n                           | python_codeloop : while_loop\n            | for_loopwhile_loop : WHILE expression COLON suitefor_loop : FOR PYTHON IN expression COLON suiteconditional : IF expression COLON suite conditional_extension\n                   | IF expression COLON suite emptyconditional_extension : ELIF expression COLON suite conditional_extensionconditional_extension : ELSE COLON suiteassignment : python_code ASSIGNMENT_OPERATOR expressionreturn : RETURN empty\n              | RETURN expressionassert : ASSERT expressionyield : YIELD expressionexpression : shellblock\n                  | python_codepython_code : PYTHON python_code\n                   | STRING python_code\n                   | DOCSTRING python_code\n                   | PYTHON empty\n                   | STRING empty\n                   | DOCSTRING emptysuite : NL INDENT nonempty_block DEDENTsuite : statement_simple NLshellblock : SHELL_DELIMITER statement SHELL_DELIMITERempty : %prec EPSILONstatement : proc\n                 | procinprocin : command STREAM_IN instream procout\n              | command STREAM_IN instream emptyproc : command empty\n            | command procoutcommand : WORD arglist\n               | WORD emptyarglist : arg empty\n               | arg arglistarg : WORD\n           | var\n           | STRINGprocout : pipeout\n               | streamout\n               | fileoutpipeout : PIPE empty proc empty empty empty\n               | PIPE LPAREN proc COMMA proc RPAREN\n               | ERRPIPE empty empty empty proc emptypipeout : BOTHPIPE procstreamout : STREAM_OUT VARNAME\n                 | STREAM_OUT LPAREN VARNAME COMMA VARNAME RPAREN\n                 | ERROUT VARNAME\n                 | BOTHOUT VARNAMEfileout : FILEOUT file\n               | FILEAPPEND fileinstream : WORD\n                | var\n                | STRINGfile : WORD\n            | var\n            | STRINGvar : VARNAME'
    
_lr_action_items = {'SHELL_DELIMITER':([0,4,6,7,8,14,18,19,20,27,28,29,30,31,32,33,41,42,43,55,60,63,64,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,88,91,92,93,95,96,97,98,99,100,101,103,105,107,110,112,113,114,115,116,118,119,120,123,126,127,129,131,133,134,135,136,137,138,139,141,],[2,-19,2,-6,2,-20,2,2,2,2,-5,54,-43,-44,-43,-45,2,-7,2,-57,-49,-59,-58,-48,-51,-43,-55,-76,-56,-50,-54,2,-8,2,2,-69,-74,-75,-73,-66,-68,-67,-43,-63,-64,-72,-71,-70,-43,-52,-53,-21,2,-43,-43,-46,-47,-41,2,2,-24,-23,2,-43,-22,2,-43,-43,-40,-26,2,-62,-61,-60,-65,-25,]),'$end':([0,4,7,10,14,17,18,22,28,42,44,45,79,103,107,114,118,119,126,133,134,141,],[-43,-19,-6,-1,-20,-2,-43,0,-5,-7,-4,-3,-8,-21,-43,-41,-24,-23,-22,-40,-26,-25,]),'COMMA':([32,55,60,63,64,68,69,70,71,72,73,74,75,83,84,85,86,87,88,91,92,93,95,100,101,109,110,111,123,129,131,136,137,138,139,],[-43,-57,-49,-59,-58,-48,-51,-43,-55,-76,-56,-50,-54,-69,-74,-75,-73,-66,-68,-67,-43,-63,-64,-52,-53,122,-43,124,-43,-43,-43,-62,-61,-60,-65,]),'VARNAME':([32,57,58,59,62,66,67,70,71,72,73,75,94,124,],[72,72,87,72,91,95,72,72,-55,-76,-56,-54,111,132,]),'IN':([52,],[80,]),'DEDENT':([4,7,14,18,28,42,44,45,79,103,107,114,118,119,125,126,133,134,141,],[-19,-6,-20,-43,-5,-7,-4,-3,-8,-21,-43,-41,-24,-23,133,-22,-40,-26,-25,]),'ELIF':([107,114,133,140,],[120,-41,-40,120,]),'ERRPIPE':([30,32,69,70,71,72,73,74,75,92,96,97,98,99,100,101,],[56,-43,-51,-43,-55,-76,-56,-50,-54,56,-72,-71,-70,56,-52,-53,]),'FILEAPPEND':([30,32,69,70,71,72,73,74,75,92,96,97,98,99,100,101,],[57,-43,-51,-43,-55,-76,-56,-50,-54,57,-72,-71,-70,57,-52,-53,]),'ERROUT':([30,32,69,70,71,72,73,74,75,92,96,97,98,99,100,101,],[58,-43,-51,-43,-55,-76,-56,-50,-54,58,-72,-71,-70,58,-52,-53,]),'INDENT':([104,],[115,]),'COLON':([9,24,25,35,36,38,39,40,48,49,50,51,53,54,106,117,128,],[-43,-43,-43,-33,-32,76,-38,-35,-34,-37,-36,-39,81,-42,116,127,135,]),'RPAREN':([32,55,60,63,64,68,69,70,71,72,73,74,75,83,84,85,86,87,88,91,92,93,95,100,101,110,123,129,130,131,132,136,137,138,139,],[-43,-57,-49,-59,-58,-48,-51,-43,-55,-76,-56,-50,-54,-69,-74,-75,-73,-66,-68,-67,-43,-63,-64,-52,-53,-43,-43,-43,137,-43,139,-62,-61,-60,-65,]),'WHILE':([0,4,7,14,18,28,42,79,103,107,114,115,118,119,126,133,134,141,],[8,-19,-6,-20,8,-5,-7,-8,-21,-43,-41,8,-24,-23,-22,-40,-26,-25,]),'SEMICOLON':([1,3,5,6,9,11,12,13,15,16,21,23,24,25,34,35,36,37,39,40,46,47,48,49,50,51,54,77,78,],[-10,-12,-11,-43,-43,-17,-14,-18,-13,43,-16,-15,-43,-43,-29,-33,-32,-28,-38,-35,-30,-31,-34,-37,-36,-39,-42,-27,105,]),'ASSERT':([0,4,7,14,18,28,42,43,76,79,81,103,105,107,114,115,116,118,119,126,127,133,134,135,141,],[19,-19,-6,-20,19,-5,-7,19,19,-8,19,-21,19,-43,-41,19,19,-24,-23,-22,19,-40,-26,19,-25,]),'PIPE':([30,32,69,70,71,72,73,74,75,92,96,97,98,99,100,101,],[61,-43,-51,-43,-55,-76,-56,-50,-54,61,-72,-71,-70,61,-52,-53,]),'BOTHOUT':([30,32,69,70,71,72,73,74,75,92,96,97,98,99,100,101,],[62,-43,-51,-43,-55,-76,-56,-50,-54,62,-72,-71,-70,62,-52,-53,]),'ELSE':([107,114,133,140,],[117,-41,-40,117,]),'RETURN':([0,4,7,14,18,28,42,43,76,79,81,103,105,107,114,115,116,118,119,126,127,133,134,135,141,],[6,-19,-6,-20,6,-5,-7,6,6,-8,6,-21,6,-43,-41,6,6,-24,-23,-22,6,-40,-26,6,-25,]),'ASSIGNMENT_OPERATOR':([9,13,24,25,39,40,48,49,50,51,],[-43,41,-43,-43,-38,-35,-34,-37,-36,-39,]),'STRING':([0,4,6,7,8,9,14,18,19,20,24,25,27,28,32,41,42,43,57,59,67,70,71,72,73,75,76,79,80,81,103,105,107,114,115,116,118,119,120,126,127,133,134,135,141,],[9,-19,9,-6,9,9,-20,9,9,9,9,9,9,-5,73,9,-7,9,85,85,96,73,-55,-76,-56,-54,9,-8,9,9,-21,9,-43,-41,9,9,-24,-23,9,-22,9,-40,-26,9,-25,]),'LPAREN':([61,66,],[89,94,]),'DOCSTRING':([0,4,6,7,8,9,14,18,19,20,24,25,27,28,41,42,43,76,79,80,81,103,105,107,114,115,116,118,119,120,126,127,133,134,135,141,],[25,-19,25,-6,25,25,-20,25,25,25,25,25,25,-5,25,-7,25,25,-8,25,25,-21,25,-43,-41,25,25,-24,-23,25,-22,25,-40,-26,25,-25,]),'STREAM_IN':([30,32,69,70,71,72,73,74,75,100,101,],[67,-43,-51,-43,-55,-76,-56,-50,-54,-52,-53,]),'BOTHPIPE':([30,32,69,70,71,72,73,74,75,92,96,97,98,99,100,101,],[65,-43,-51,-43,-55,-76,-56,-50,-54,65,-72,-71,-70,65,-52,-53,]),'STREAM_OUT':([30,32,69,70,71,72,73,74,75,92,96,97,98,99,100,101,],[66,-43,-51,-43,-55,-76,-56,-50,-54,66,-72,-71,-70,66,-52,-53,]),'PYTHON':([0,4,6,7,8,9,14,18,19,20,24,25,26,27,28,41,42,43,76,79,80,81,103,105,107,114,115,116,118,119,120,126,127,133,134,135,141,],[24,-19,24,-6,24,24,-20,24,24,24,24,24,52,24,-5,24,-7,24,24,-8,24,24,-21,24,-43,-41,24,24,-24,-23,24,-22,24,-40,-26,24,-25,]),'FOR':([0,4,7,14,18,28,42,79,103,107,114,115,118,119,126,133,134,141,],[26,-19,-6,-20,26,-5,-7,-8,-21,-43,-41,26,-24,-23,-22,-40,-26,-25,]),'IF':([0,4,7,14,18,28,42,79,103,107,114,115,118,119,126,133,134,141,],[27,-19,-6,-20,27,-5,-7,-8,-21,-43,-41,27,-24,-23,-22,-40,-26,-25,]),'FILEOUT':([30,32,69,70,71,72,73,74,75,92,96,97,98,99,100,101,],[59,-43,-51,-43,-55,-76,-56,-50,-54,59,-72,-71,-70,59,-52,-53,]),'NL':([1,3,5,6,9,11,12,13,15,16,21,23,24,25,34,35,36,37,39,40,43,46,47,48,49,50,51,54,76,77,78,81,102,116,127,135,],[-10,-12,-11,-43,-43,-17,-14,-18,-13,42,-16,-15,-43,-43,-29,-33,-32,-28,-38,-35,79,-30,-31,-34,-37,-36,-39,-42,104,-27,-9,104,114,104,104,104,]),'WORD':([2,32,56,57,59,61,65,67,70,71,72,73,75,82,89,90,108,121,122,],[32,75,-43,86,86,-43,32,98,75,-55,-76,-56,-54,-43,32,32,-43,32,32,]),'YIELD':([0,4,7,14,18,28,42,43,76,79,81,103,105,107,114,115,116,118,119,126,127,133,134,135,141,],[20,-19,-6,-20,20,-5,-7,20,20,-8,20,-21,20,-43,-41,20,20,-24,-23,-22,20,-40,-26,20,-25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_simple':([0,18,43,76,81,105,115,116,127,135,],[1,1,1,102,102,1,1,102,102,102,]),'expression':([6,8,19,20,27,41,80,120,],[34,38,46,47,53,77,106,128,]),'statement_no_result':([0,18,43,76,81,105,115,116,127,135,],[3,3,3,3,3,3,3,3,3,3,]),'while_loop':([0,18,115,],[4,4,4,]),'proc':([2,65,89,90,121,122,],[31,93,109,110,129,130,]),'streamout':([30,92,99,],[64,64,64,]),'pipeout':([30,92,99,],[55,55,55,]),'procout':([30,92,99,],[60,60,112,]),'arglist':([32,70,],[74,101,]),'instream':([67,],[99,]),'arg':([32,70,],[70,70,]),'suite':([76,81,116,127,135,],[103,107,126,134,140,]),'statement_result':([0,18,43,76,81,105,115,116,127,135,],[5,5,5,5,5,5,5,5,5,5,]),'file':([57,59,],[83,88,]),'shellblock':([0,6,8,18,19,20,27,41,43,76,80,81,105,115,116,120,127,135,],[11,36,36,11,36,36,36,36,11,11,36,11,11,11,11,36,11,11,]),'programfile':([0,],[22,]),'return':([0,18,43,76,81,105,115,116,127,135,],[12,12,12,12,12,12,12,12,12,12,]),'for_loop':([0,18,115,],[14,14,14,]),'command':([2,65,89,90,121,122,],[30,92,92,92,92,92,]),'assignment':([0,18,43,76,81,105,115,116,127,135,],[15,15,15,15,15,15,15,15,15,15,]),'statement_multi':([0,18,43,105,115,],[16,16,78,78,16,]),'python_code':([0,6,8,9,18,19,20,24,25,27,41,43,76,80,81,105,115,116,120,127,135,],[13,35,35,40,13,35,35,48,50,35,35,13,13,35,13,13,13,13,35,13,13,]),'statement_complex':([0,18,115,],[18,18,18,]),'yield':([0,18,43,76,81,105,115,116,127,135,],[21,21,21,21,21,21,21,21,21,21,]),'statement':([2,],[29,]),'assert':([0,18,43,76,81,105,115,116,127,135,],[23,23,23,23,23,23,23,23,23,23,]),'fileout':([30,92,99,],[63,63,63,]),'conditional_extension':([107,140,],[119,141,]),'conditional':([0,18,115,],[7,7,7,]),'loop':([0,18,115,],[28,28,28,]),'nonempty_block':([0,18,115,],[10,44,125,]),'empty':([0,6,9,18,24,25,30,32,56,61,70,82,92,99,107,108,110,123,129,131,],[17,37,39,45,49,51,68,69,82,90,100,108,68,113,118,121,123,131,136,138,]),'procin':([2,],[33,]),'var':([32,57,59,67,70,],[71,84,84,97,71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programfile","S'",1,None,None,None),
  ('programfile -> nonempty_block','programfile',1,'p_programfile','pyshell_parser.py',19),
  ('programfile -> empty','programfile',1,'p_programfile','pyshell_parser.py',20),
  ('nonempty_block -> statement_complex empty','nonempty_block',2,'p_nonempty_block','pyshell_parser.py',24),
  ('nonempty_block -> statement_complex nonempty_block','nonempty_block',2,'p_nonempty_block','pyshell_parser.py',25),
  ('statement_complex -> loop','statement_complex',1,'p_statement_complex','pyshell_parser.py',29),
  ('statement_complex -> conditional','statement_complex',1,'p_statement_complex','pyshell_parser.py',30),
  ('statement_complex -> statement_multi NL','statement_complex',2,'p_statement_complex','pyshell_parser.py',31),
  ('statement_complex -> statement_multi SEMICOLON NL','statement_complex',3,'p_statement_complex','pyshell_parser.py',32),
  ('statement_multi -> statement_multi SEMICOLON statement_multi','statement_multi',3,'p_statement_multi','pyshell_parser.py',36),
  ('statement_multi -> statement_simple','statement_multi',1,'p_statement_single','pyshell_parser.py',40),
  ('statement_simple -> statement_result','statement_simple',1,'p_statement_simple','pyshell_parser.py',44),
  ('statement_simple -> statement_no_result','statement_simple',1,'p_statement_simple','pyshell_parser.py',45),
  ('statement_result -> assignment','statement_result',1,'p_statement_result','pyshell_parser.py',49),
  ('statement_result -> return','statement_result',1,'p_statement_result','pyshell_parser.py',50),
  ('statement_result -> assert','statement_result',1,'p_statement_result','pyshell_parser.py',51),
  ('statement_result -> yield','statement_result',1,'p_statement_result','pyshell_parser.py',52),
  ('statement_no_result -> shellblock','statement_no_result',1,'p_statement_no_result','pyshell_parser.py',56),
  ('statement_no_result -> python_code','statement_no_result',1,'p_statement_no_result','pyshell_parser.py',57),
  ('loop -> while_loop','loop',1,'p_loop','pyshell_parser.py',62),
  ('loop -> for_loop','loop',1,'p_loop','pyshell_parser.py',63),
  ('while_loop -> WHILE expression COLON suite','while_loop',4,'p_while','pyshell_parser.py',67),
  ('for_loop -> FOR PYTHON IN expression COLON suite','for_loop',6,'p_for','pyshell_parser.py',71),
  ('conditional -> IF expression COLON suite conditional_extension','conditional',5,'p_conditional','pyshell_parser.py',76),
  ('conditional -> IF expression COLON suite empty','conditional',5,'p_conditional','pyshell_parser.py',77),
  ('conditional_extension -> ELIF expression COLON suite conditional_extension','conditional_extension',5,'p_conditional_extension_elif','pyshell_parser.py',81),
  ('conditional_extension -> ELSE COLON suite','conditional_extension',3,'p_conditional_extension_else','pyshell_parser.py',85),
  ('assignment -> python_code ASSIGNMENT_OPERATOR expression','assignment',3,'p_assignment','pyshell_parser.py',90),
  ('return -> RETURN empty','return',2,'p_return','pyshell_parser.py',94),
  ('return -> RETURN expression','return',2,'p_return','pyshell_parser.py',95),
  ('assert -> ASSERT expression','assert',2,'p_assert','pyshell_parser.py',99),
  ('yield -> YIELD expression','yield',2,'p_yield','pyshell_parser.py',103),
  ('expression -> shellblock','expression',1,'p_expression','pyshell_parser.py',107),
  ('expression -> python_code','expression',1,'p_expression','pyshell_parser.py',108),
  ('python_code -> PYTHON python_code','python_code',2,'p_python_code','pyshell_parser.py',112),
  ('python_code -> STRING python_code','python_code',2,'p_python_code','pyshell_parser.py',113),
  ('python_code -> DOCSTRING python_code','python_code',2,'p_python_code','pyshell_parser.py',114),
  ('python_code -> PYTHON empty','python_code',2,'p_python_code','pyshell_parser.py',115),
  ('python_code -> STRING empty','python_code',2,'p_python_code','pyshell_parser.py',116),
  ('python_code -> DOCSTRING empty','python_code',2,'p_python_code','pyshell_parser.py',117),
  ('suite -> NL INDENT nonempty_block DEDENT','suite',4,'p_suite_block','pyshell_parser.py',121),
  ('suite -> statement_simple NL','suite',2,'p_suite_inline','pyshell_parser.py',125),
  ('shellblock -> SHELL_DELIMITER statement SHELL_DELIMITER','shellblock',3,'p_shellblock','pyshell_parser.py',129),
  ('empty -> <empty>','empty',0,'p_empty','pyshell_parser.py',133),
  ('statement -> proc','statement',1,'p_statement','pyshell_parser.py',137),
  ('statement -> procin','statement',1,'p_statement','pyshell_parser.py',138),
  ('procin -> command STREAM_IN instream procout','procin',4,'p_procin','pyshell_parser.py',142),
  ('procin -> command STREAM_IN instream empty','procin',4,'p_procin','pyshell_parser.py',143),
  ('proc -> command empty','proc',2,'p_proc','pyshell_parser.py',147),
  ('proc -> command procout','proc',2,'p_proc','pyshell_parser.py',148),
  ('command -> WORD arglist','command',2,'p_command','pyshell_parser.py',152),
  ('command -> WORD empty','command',2,'p_command','pyshell_parser.py',153),
  ('arglist -> arg empty','arglist',2,'p_arglist','pyshell_parser.py',157),
  ('arglist -> arg arglist','arglist',2,'p_arglist','pyshell_parser.py',158),
  ('arg -> WORD','arg',1,'p_arg','pyshell_parser.py',162),
  ('arg -> var','arg',1,'p_arg','pyshell_parser.py',163),
  ('arg -> STRING','arg',1,'p_arg','pyshell_parser.py',164),
  ('procout -> pipeout','procout',1,'p_procout','pyshell_parser.py',168),
  ('procout -> streamout','procout',1,'p_procout','pyshell_parser.py',169),
  ('procout -> fileout','procout',1,'p_procout','pyshell_parser.py',170),
  ('pipeout -> PIPE empty proc empty empty empty','pipeout',6,'p_pipe','pyshell_parser.py',174),
  ('pipeout -> PIPE LPAREN proc COMMA proc RPAREN','pipeout',6,'p_pipe','pyshell_parser.py',175),
  ('pipeout -> ERRPIPE empty empty empty proc empty','pipeout',6,'p_pipe','pyshell_parser.py',176),
  ('pipeout -> BOTHPIPE proc','pipeout',2,'p_bothpipe','pyshell_parser.py',180),
  ('streamout -> STREAM_OUT VARNAME','streamout',2,'p_streamout','pyshell_parser.py',184),
  ('streamout -> STREAM_OUT LPAREN VARNAME COMMA VARNAME RPAREN','streamout',6,'p_streamout','pyshell_parser.py',185),
  ('streamout -> ERROUT VARNAME','streamout',2,'p_streamout','pyshell_parser.py',186),
  ('streamout -> BOTHOUT VARNAME','streamout',2,'p_streamout','pyshell_parser.py',187),
  ('fileout -> FILEOUT file','fileout',2,'p_fileout','pyshell_parser.py',191),
  ('fileout -> FILEAPPEND file','fileout',2,'p_fileout','pyshell_parser.py',192),
  ('instream -> WORD','instream',1,'p_instream','pyshell_parser.py',196),
  ('instream -> var','instream',1,'p_instream','pyshell_parser.py',197),
  ('instream -> STRING','instream',1,'p_instream','pyshell_parser.py',198),
  ('file -> WORD','file',1,'p_file','pyshell_parser.py',202),
  ('file -> var','file',1,'p_file','pyshell_parser.py',203),
  ('file -> STRING','file',1,'p_file','pyshell_parser.py',204),
  ('var -> VARNAME','var',1,'p_var','pyshell_parser.py',208),
]

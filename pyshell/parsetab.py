
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programfilenonassocEPSILONBOTHOUT BOTHPIPE COMMA DELIMITER ERROUT ERRPIPE FILEAPPEND FILEOUT IN LPAREN NL OUT PIPE RPAREN STRING VARNAME WORDprogramfile : shellblockshellblock : DELIMITER statement DELIMITER NLempty : %prec EPSILONstatement : proc\n                 | procinprocin : command IN instream procout\n              | command IN instream emptyproc : command empty\n            | command procoutcommand : WORD arglist\n               | WORD emptyarglist : arg empty\n               | arg arglistarg : WORD\n           | var\n           | STRINGprocout : pipeout\n               | streamout\n               | fileoutpipeout : PIPE empty proc empty empty empty\n               | PIPE LPAREN proc COMMA proc RPAREN\n               | ERRPIPE empty empty empty proc emptypipeout : BOTHPIPE procstreamout : OUT VARNAME\n                 | OUT LPAREN VARNAME COMMA VARNAME RPAREN\n                 | ERROUT VARNAME\n                 | BOTHOUT VARNAMEfileout : FILEOUT file\n               | FILEAPPEND fileinstream : WORD\n                | var\n                | STRINGfile : WORD\n            | var\n            | STRINGvar : VARNAME'
    
_lr_action_items = {'DELIMITER':([0,4,5,6,7,8,10,11,12,14,17,24,25,26,27,28,29,30,32,33,34,35,37,38,39,40,41,42,43,44,48,49,50,51,52,53,56,60,64,65,66,67,68,69,],[1,9,-3,-5,-4,-3,-18,-17,-19,-9,-8,-16,-15,-3,-10,-36,-14,-11,-32,-30,-3,-31,-24,-35,-34,-33,-28,-23,-3,-26,-27,-29,-13,-12,-6,-7,-3,-3,-3,-3,-25,-21,-20,-22,]),'COMMA':([8,10,11,12,14,17,24,25,26,27,28,29,30,37,38,39,40,41,42,43,44,48,49,50,51,54,55,56,60,64,65,66,67,68,69,],[-3,-18,-17,-19,-9,-8,-16,-15,-3,-10,-36,-14,-11,-24,-35,-34,-33,-28,-23,-3,-26,-27,-29,-13,-12,58,59,-3,-3,-3,-3,-25,-21,-20,-22,]),'RPAREN':([8,10,11,12,14,17,24,25,26,27,28,29,30,37,38,39,40,41,42,43,44,48,49,50,51,56,60,62,63,64,65,66,67,68,69,],[-3,-18,-17,-19,-9,-8,-16,-15,-3,-10,-36,-14,-11,-24,-35,-34,-33,-28,-23,-3,-26,-27,-29,-13,-12,-3,-3,66,67,-3,-3,-25,-21,-20,-22,]),'ERROUT':([5,8,24,25,26,27,28,29,30,32,33,34,35,43,50,51,],[19,-3,-16,-15,-3,-10,-36,-14,-11,-32,-30,19,-31,19,-13,-12,]),'LPAREN':([15,20,],[36,45,]),'BOTHPIPE':([5,8,24,25,26,27,28,29,30,32,33,34,35,43,50,51,],[18,-3,-16,-15,-3,-10,-36,-14,-11,-32,-30,18,-31,18,-13,-12,]),'PIPE':([5,8,24,25,26,27,28,29,30,32,33,34,35,43,50,51,],[20,-3,-16,-15,-3,-10,-36,-14,-11,-32,-30,20,-31,20,-13,-12,]),'NL':([9,],[31,]),'STRING':([8,13,16,23,24,25,26,28,29,],[24,32,38,38,-16,-15,24,-36,-14,]),'IN':([5,8,24,25,26,27,28,29,30,50,51,],[13,-3,-16,-15,-3,-10,-36,-14,-11,-13,-12,]),'ERRPIPE':([5,8,24,25,26,27,28,29,30,32,33,34,35,43,50,51,],[21,-3,-16,-15,-3,-10,-36,-14,-11,-32,-30,21,-31,21,-13,-12,]),'OUT':([5,8,24,25,26,27,28,29,30,32,33,34,35,43,50,51,],[15,-3,-16,-15,-3,-10,-36,-14,-11,-32,-30,15,-31,15,-13,-12,]),'FILEOUT':([5,8,24,25,26,27,28,29,30,32,33,34,35,43,50,51,],[16,-3,-16,-15,-3,-10,-36,-14,-11,-32,-30,16,-31,16,-13,-12,]),'BOTHOUT':([5,8,24,25,26,27,28,29,30,32,33,34,35,43,50,51,],[22,-3,-16,-15,-3,-10,-36,-14,-11,-32,-30,22,-31,22,-13,-12,]),'$end':([2,3,31,],[0,-1,-2,]),'WORD':([1,8,13,16,18,20,21,23,24,25,26,28,29,45,46,47,57,59,61,],[8,29,33,40,8,-3,-3,40,-16,-15,29,-36,-14,8,8,-3,-3,8,8,]),'VARNAME':([8,13,15,16,19,22,23,24,25,26,28,29,36,58,],[28,28,37,28,44,48,28,-16,-15,28,-36,-14,54,62,]),'FILEAPPEND':([5,8,24,25,26,27,28,29,30,32,33,34,35,43,50,51,],[23,-3,-16,-15,-3,-10,-36,-14,-11,-32,-30,23,-31,23,-13,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'arg':([8,26,],[26,26,]),'shellblock':([0,],[3,]),'var':([8,13,16,23,26,],[25,35,39,39,25,]),'streamout':([5,34,43,],[10,10,10,]),'pipeout':([5,34,43,],[11,11,11,]),'command':([1,18,45,46,59,61,],[5,43,43,43,43,43,]),'file':([16,23,],[41,49,]),'fileout':([5,34,43,],[12,12,12,]),'instream':([13,],[34,]),'statement':([1,],[4,]),'procout':([5,34,43,],[14,52,14,]),'programfile':([0,],[2,]),'procin':([1,],[6,]),'proc':([1,18,45,46,59,61,],[7,42,55,56,63,65,]),'arglist':([8,26,],[27,50,]),'empty':([5,8,20,21,26,34,43,47,56,57,60,64,65,],[17,30,46,47,51,53,17,57,60,61,64,68,69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programfile","S'",1,None,None,None),
  ('programfile -> shellblock','programfile',1,'p_programfile','pyshell_parser.py',22),
  ('shellblock -> DELIMITER statement DELIMITER NL','shellblock',4,'p_shellblock','pyshell_parser.py',26),
  ('empty -> <empty>','empty',0,'p_empty','pyshell_parser.py',30),
  ('statement -> proc','statement',1,'p_statement','pyshell_parser.py',34),
  ('statement -> procin','statement',1,'p_statement','pyshell_parser.py',35),
  ('procin -> command IN instream procout','procin',4,'p_procin','pyshell_parser.py',39),
  ('procin -> command IN instream empty','procin',4,'p_procin','pyshell_parser.py',40),
  ('proc -> command empty','proc',2,'p_proc','pyshell_parser.py',44),
  ('proc -> command procout','proc',2,'p_proc','pyshell_parser.py',45),
  ('command -> WORD arglist','command',2,'p_command','pyshell_parser.py',49),
  ('command -> WORD empty','command',2,'p_command','pyshell_parser.py',50),
  ('arglist -> arg empty','arglist',2,'p_arglist','pyshell_parser.py',54),
  ('arglist -> arg arglist','arglist',2,'p_arglist','pyshell_parser.py',55),
  ('arg -> WORD','arg',1,'p_arg','pyshell_parser.py',59),
  ('arg -> var','arg',1,'p_arg','pyshell_parser.py',60),
  ('arg -> STRING','arg',1,'p_arg','pyshell_parser.py',61),
  ('procout -> pipeout','procout',1,'p_procout','pyshell_parser.py',65),
  ('procout -> streamout','procout',1,'p_procout','pyshell_parser.py',66),
  ('procout -> fileout','procout',1,'p_procout','pyshell_parser.py',67),
  ('pipeout -> PIPE empty proc empty empty empty','pipeout',6,'p_pipe','pyshell_parser.py',71),
  ('pipeout -> PIPE LPAREN proc COMMA proc RPAREN','pipeout',6,'p_pipe','pyshell_parser.py',72),
  ('pipeout -> ERRPIPE empty empty empty proc empty','pipeout',6,'p_pipe','pyshell_parser.py',73),
  ('pipeout -> BOTHPIPE proc','pipeout',2,'p_bothpipe','pyshell_parser.py',77),
  ('streamout -> OUT VARNAME','streamout',2,'p_streamout','pyshell_parser.py',81),
  ('streamout -> OUT LPAREN VARNAME COMMA VARNAME RPAREN','streamout',6,'p_streamout','pyshell_parser.py',82),
  ('streamout -> ERROUT VARNAME','streamout',2,'p_streamout','pyshell_parser.py',83),
  ('streamout -> BOTHOUT VARNAME','streamout',2,'p_streamout','pyshell_parser.py',84),
  ('fileout -> FILEOUT file','fileout',2,'p_fileout','pyshell_parser.py',88),
  ('fileout -> FILEAPPEND file','fileout',2,'p_fileout','pyshell_parser.py',89),
  ('instream -> WORD','instream',1,'p_instream','pyshell_parser.py',93),
  ('instream -> var','instream',1,'p_instream','pyshell_parser.py',94),
  ('instream -> STRING','instream',1,'p_instream','pyshell_parser.py',95),
  ('file -> WORD','file',1,'p_file','pyshell_parser.py',99),
  ('file -> var','file',1,'p_file','pyshell_parser.py',100),
  ('file -> STRING','file',1,'p_file','pyshell_parser.py',101),
  ('var -> VARNAME','var',1,'p_var','pyshell_parser.py',105),
]
